# To be used inside script files only
#########
export __scriptsDir="$HOME/.scripts"
export __sharedLocationCommon="/proj/tas/temp"
export __sharedLocationPersonal="$__sharedLocationCommon/$USER"

# ///
export __projectsDir="/local/scratch/$USER/"
export __qtDir="$__projectsDir/qtcreator/qtcreator"

# mason
export CNA_TOOLS=/local/ccsm/mason
export PATH="$PATH:$CNA_TOOLS/scripts/"
#
#########

# General purpose
export SCRATCH="$__projectsDir"

# ///
# gerrit
export dev="HEAD:refs/for/develop"
export ddraft="HEAD:refs/drafts/develop"

export master="HEAD:refs/for/master"
export mdraft="HEAD:refs/drafts/master"

# Custom prompt with git branch highlighting
source $__scriptsDir/gitBranchInPrompt.bash

alias f="find"
alias h="head -n"
alias t="tail -n"
alias x="xargs"
alias xi="xargs -I"
alias rl="readlink -f"

GREP_FLAGS="--color=always"
alias g="grep"
alias gi="grep -i"
alias gc="grep $GREP_FLAGS"
alias gci="grep -i $GREP_FLAGS"

alias gfind_ttcn="find ./ -type f -name \"*.ttcn\" | x grep "
alias gfind_cc="find ./ -type f -name \".cc\" | x grep "
alias gfind_py="find ./ -type f -name \".py\" | x grep "

alias extract="$__scriptsDir/ExtractLastOrSpecified.sh"
alias extractAll="$__scriptsDir/ExtractAll.sh"

alias last="$__scriptsDir/LastN.sh"
alias prev="last 2 | t 1"

alias cdl='cd `last`'
alias cdp="cd $__projectsDir"
alias cdf="cd $__projectsDir/ft"
alias cds="cd $__sharedLocationPersonal"

alias psd="pushd `pwd` > /dev/null ; cd -"
alias ppd="popd > /dev/null"

alias share="$__scriptsDir/Share.sh"

# removes trailing spaces in specified file
# OVERWRITES THE FILE!
alias removeTrailingSpaces='sed "s/\s*$//g" -i'

# copy-paste
alias c="xclip"
alias v="xclip -o"

# in case if xclip is not available (on WSL environment, mostly) thus this paste.exe variant is to be used
# get paste.exe here:
# c3scripts.com/tutorials/msdos/paste.html
#alias c="clip.exe"
#alias v="paste.exe"

# Disable/Enable hooks in current repo
function getRepoRoot() {
  echo `git rev-parse --show-toplevel`
}

function disableHooks() {
  local rootPath=$(getRepoRoot)
  mv $rootPath/.git/hooks $rootPath/.git/hooks.bak
}

function enableHooks() {
  local rootPath=$(getRepoRoot)
  mv $rootPath/.git/hooks.bak $rootPath/.git/hooks
}

